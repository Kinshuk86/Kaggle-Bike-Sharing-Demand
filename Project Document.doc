PROJECT PROPOSAL
Bike Sharing is the program for giving bikes on rent within the cities. I have chosen this project because I belong to the Travel & Transport domain. Since I was unable to find any dataset available for the Car Rental Industry, I thought of going for this Bike Sharing Demand Project which was available on Kaggle. 

Bike sharing systems are gaining popularity around the world — there are over 500 different programs currently operating in various cities. These programs are generally earning money through renter’s membership fees, or through pay-to-ride one time rental fees. These programs are like Car Rental Industry only where riders who pick up a bicycle from one station can return the bicycle to any other in the network.  These systems generate a great deal of data relating to various ride details, including travel time, departure location, arrival location, and so on. 

The Data seems very familiar to me because I have already seen such kind of data in my Car Rental Industry. The data which is being used in this project is for Washington D.C. The goal of the Kaggle competition is to leverage the historical data provided in order to forecast future bike rental demand within the city.

Below is the approach which I have followed:
1.	First, I have analyzed the dataset provided by Kaggle and tried to identified the Independent and Dependent variables.
2.	Second, I did basic Data Exploration and plotted histogram for all the independent variables just to see how the data is distributed.
3.	Third, I have plotted few boxplots for the discrete variables to get the better understanding of the distribution.
4.	Fourth, I tried few Feature Engineering concepts to extract meaning information from the existing independent variables.
5.	Fifth, I tried to handle the outliers present within the dependent variables by doing the log transformation.
6.	Sixth, I found out the correlation among variables to see how they are correlated with each other.
7.	Seventh, I have used several models to solve the end problem. I have used Linear Regression, Decision Trees and Random Forest. Out of which Random Forest proves to be the best one.





